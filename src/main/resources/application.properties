management.security.enabled=true
security.basic.enabled=false
security.user.name=admin
security.user.password=12340
server.tomcat.access_log_enabled=true

spring.jpa.hibernate.ddl-auto=update
spring.jpa.database=mysql
# 数据库访问配置
# 主数据源，默认的
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
#spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://111.231.85.247:3306/triangle?useUnicode=true&characterEncoding=utf-8
spring.datasource.username=root
spring.datasource.password=13901183126_5369n5xGG
#spring.datasource.password=5369n5xGG

# 下面为连接池的补充设置，应用到上面所有数据源中
spring.jpa.show-sql=true

# 下面为连接池的补充设置，应用到上面所有数据源中
# 初始化大小，最小，最大
spring.datasource.druid.initialSize=5
spring.datasource.druid.minIdle=5
spring.datasource.druid.maxActive=20
# 配置获取连接等待超时的时间
spring.datasource.druid.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.druid.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.druid.minEvictableIdleTimeMillis=300000
spring.datasource.druid.testWhileIdle=true
spring.datasource.druid.testOnBorrow=true
spring.datasource.druid.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.druid.poolPreparedStatements=true
spring.datasource.druid.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
#spring.datasource.druid.filters=stat,wall,log4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
#spring.datasource.druid.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 合并多个DruidDataSource的监控数据
#spring.datasource.druid.useGlobalDataSourceStat=true




#redis基础配置
spring.session.store-type=redis
spring.session.redis.flushMode=IMMEDIATE
spring.redis.database=0
spring.redis.host=111.231.85.247
spring.redis.port=6379
#密码默认为空
spring.redis.password=
# 连接超时时间 单位 ms（毫秒）
spring.redis.timeout=3000
# 连接池中的最大空闲连接，默认值也是8。
spring.redis.jedis.pool.max-idle=8
#连接池中的最小空闲连接，默认值也是0。
spring.redis.jedis.pool.min-idle=0
# 如果赋值为-1，则表示不限制；如果pool已经分配了maxActive个jedis实例，则此时pool的状态为exhausted(耗尽)。
spring.redis.jedis.pool.max-active=8
# 等待可用连接的最大时间，单位毫秒，默认值为-1，表示永不超时。如果超过等待时间，则直接抛出JedisConnectionException
spring.redis.jedis.pool.max-wait=-1ms
#################redis哨兵设置#################
# Redis服务器master的名字
#spring.redis.sentinel.master=master8026
# redis-sentinel的配置地址和端口
#spring.redis.sentinel.nodes=10.189.80.25:26379,10.189.80.26:26379,10.189.80.27:26378

##ehcache 配置--开始
#spring.cache.ehcache.config=ehcache.xml
## 打开hibernate统计信息
#spring.jpa.properties.hibernate.generate_statistics=true
## 打开二级缓存
#spring.jpa.properties.hibernate.cache.use_second_level_cache=true
## 打开查询缓存
#spring.jpa.properties.hibernate.cache.use_query_cache=true
## 指定缓存provider
#spring.jpa.properties.hibernate.cache.region.factory_class=org.hibernate.cache.ehcache.EhCacheRegionFactory
## 配置shared-cache-mode
#spring.jpa.properties.javax.persistence.sharedCache.mode=ALL
##ehcache 配置--结束

server.context-path=/mc
# 静态文件请求匹配方式
spring.mvc.static-path-pattern=/**

#log4j 配置--开始
logging.path=/logs/local/mc/log
logging.level.com.favorites=ERROR
logging.level.org.springframework.web=ERROR
logging.level.org.hibernate=ERROR
logging.config=classpath:log4j2.xml
#log4j 配置--结束

#thymeleaf 配置--开始
spring.thymeleaf.mode=HTML5
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.content-type=text/html
#开发时关闭缓存,不然没法看到实时页面
spring.thymeleaf.cache=false
#thymeleaf 配置--结束

spring.messages.basename=/i18n/messages
spring.devtools.livereload.enabled=true